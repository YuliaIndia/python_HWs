# Задача 16: 
# Требуется вычислить, сколько раз встречается некоторое число num в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов 
# в массиве. В последующих строках записаны N целых чисел Ai. 
# Последняя строка содержит число num
# 5
# 1 2 3 4 5
# 3
# -> 1

# N = int(input('Введите число элементов массива: '))
# list_1 = []
# for i in range(N):
#     list_1.append(int(input('число: ')))
# num = int(input('Введите искомое число Х: '))
# count=0
# for i in range(N):
#     if list_1[i]==num:
#         count+=1
# print('Х встречается в массиве ', count, ' раз')

# Задача 18: 
# Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу
# num. Пользователь в первой строке вводит натуральное число N – количество элементов 
# в массиве. В последующих строках записаны N целых чисел Ai. 
# Последняя строка содержит число num
# 5
# 1 2 3 4 5
# 6
# -> 5

# N = int(input('Введите число элементов массива: '))
# list_1 = []
# for i in range(N):
#     list_1.append(int(input('число: ')))
# num = int(input('Введите искомое число Х: '))
# min_in_list_1 = list_1[0]
# max_in_list_1 = list_1[0]
# for i in range(N):
#     if list_1[i]<min_in_list_1:
#         min_in_list_1=list_1[i]
#     if list_1[i]>max_in_list_1:
#         max_in_list_1=list_1[i]
# if num<=min_in_list_1:
#     print('наиболее близко к Х в массиве число: ', min_in_list_1)
# elif num>=max_in_list_1:
#     print('наиболее близко к Х в массиве число: ',max_in_list_1)
# else:
#     diff=list_1[i]-num+1     
#     options_set={}
#     for i in range(N):
#         if (abs(list_1[i]-num))<diff:
#             diff=abs(list_1[i]-num)
#             options_set={(num-diff), (num+diff)}
#         elif (list_1[i]-num)==0:
#             print('наиболее близко к Х в массиве число: ', num)
#             break
#     print('наиболее близко к Х в массиве число(а): ', options_set.intersection(set(list_1)))

# Задача 20: 
# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, num – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.

# Ввод:
# ноутбук
# Вывод:
# 12

# eng={'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '-'}
# rus={'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ь', 'ы', 'ъ', 'э', 'ю', 'я', '-'}
# d1={'a':1,  'b':3,  'c':3,  'd':2,  'e':1,  'f':4,  'g':2,  'h':4,  'i':1,  'j':8,  'k':5,  'l':1,  'm':3,  'n':1,  'o':1,  'p':3,  'q':10,  'r':1,  's':1,  't':1,  'u':1,  'v':4,  'w':4,  'x':8,  'y':4,  'z':10}
# d0={'а':1,  'б':3,  'в':1,  'г':3,  'д':2,  'е':1,  'ё':3,  'ж':5,  'з':5,  'и':1,  'й':4,  'к':2,  'л':2,  'м':2,  'н':1,  'о':1,  'п':2,  'р':1,  'с':1,  'т':1,  'у':2,  'ф':10,  'х':5,  'ц':5,  'ч':5,  'ш':8,  'щ':10,  'ь':3,  'ы':4,  'ъ':10,  'э':8,  'ю':8,  'я':3}
# my_word = str(input('Введите слово на английском или русском языке: '))
# lang=int()
# if eng.intersection(set(my_word)) == set(my_word):
#     lang=1
# elif rus.intersection(set(my_word)) == set(my_word):
#     lang=0
# # elif (not(eng.intersection(set(my_word)) == set(my_word)) and not(rus.intersection(set(my_word)) == set(my_word))):
# #     print('проверьте правильность введенного слова')
#     # break
# weight=0
# # print(lang)
# if lang==1:
#     for i in range(len(my_word)):
#         weight+=d1[my_word[i:(i+1)]]
# if lang==0:
#     for i in range(len(my_word)):
#         weight+=d0[my_word[i:(i+1)]]
# print('баллы за ваше слово: ', weight)